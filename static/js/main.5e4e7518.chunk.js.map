{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","selectedKey","handler","event","setState","key","document","addEventListener","this","removeEventListener","currentKey","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,2BAFjB,EAaEC,QAAU,SAACC,GACT,EAAKC,SAAS,CAAEH,YAAaE,EAAME,OAdvC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,WAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,WAV/C,oBAiBE,WACE,IAAMQ,EAAaF,KAAKR,MAAMC,YAE9B,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEoB,4BAAfD,EACGA,EADJ,mCAEgCA,EAFhC,aAxBZ,GAAyBE,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.5e4e7518.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  selectedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  handler = (event: KeyboardEvent) => {\n    this.setState({ selectedKey: event.key });\n  };\n\n  render() {\n    const currentKey = this.state.selectedKey;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            (currentKey === 'Nothing was pressed yet')\n              ? currentKey\n              : `The last pressed key is [${currentKey}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}